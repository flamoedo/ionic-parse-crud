{"version":3,"sources":["webpack:///./src/app/home/home.module.ts","webpack:///./src/app/home/home.page.html","webpack:///./src/app/home/home.page.scss","webpack:///./src/app/home/home.page.ts"],"names":[],"mappings":"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","file":"home-home-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\n\nimport { HomePage } from './home.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,    \n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomePage\n      }\n    ])\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>\\n      Info List\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list #gameList>\\n    <ion-refresher (ionRefresh)=\\\"refresh($event)\\\">\\n      <ion-refresher-content pullingIcon=\\\"arrow-dropdown\\\" pullingText=\\\"Pull to refresh\\\" refreshingSpinner=\\\"circles\\\"\\n        refreshingText=\\\"Refreshing...\\\">\\n      </ion-refresher-content>\\n    </ion-refresher>\\n\\n    <ion-item-sliding *ngFor=\\\"let score of scores async\\\" #slidingItem>\\n      <ion-item detail lines=\\\"full\\\" [routerLink]=\\\"['/detail',score.id]\\\">\\n        <ion-icon name=\\\"desktop\\\" slot=\\\"start\\\"></ion-icon>\\n        {{score.get(\\\"playerName\\\")}}\\n      </ion-item>\\n      <ion-item-options side=\\\"end\\\">\\n        <ion-item-option color=\\\"secondary\\\" (click)=\\\"edit(score.id, slidingItem)\\\">EDIT</ion-item-option>\\n        <ion-item-option color=\\\"secondary\\\" (click)=\\\"delete(score, i)\\\">DELETE</ion-item-option>\\n      </ion-item-options>\\n    </ion-item-sliding>\\n  </ion-list>\\n</ion-content>\\n\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\" routerLink=\\\"/create\\\">\\n  <ion-fab-button>\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\n  </ion-fab-button>\\n</ion-fab>\"","module.exports = \"\"","import { Component} from '@angular/core';\nimport { AlertController } from '@ionic/angular';\nimport { Router } from '@angular/router';\n\nvar Parse = require('parse');\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\n\nexport class HomePage {\n  GameScore\n  query\n  results\n  scores = []\n\n  constructor(public router: Router, public alertController: AlertController) {\n\n    this.GameScore = Parse.Object.extend(\"GameScore\");\n    this.query = new Parse.Query(this.GameScore);\n    this.query.limit(100);\n    this.initial_query();\n    // this.list.closeSlidingItems();\n\n  } \n\n  refresh(event) {\n    setTimeout(() => {\n      event.target.complete();\n    }, 2000);\n    this.initial_query();\n  }\n\n  async initial_query() {\n\n    await this.query.find().then(\n      results => {\n        this.scores = []\n        for (let i = 0; i < results.length; i++) {\n          let object = results[i];\n          this.scores.push(object);\n        }\n      }\n    )\n  }\n\n  async delete(score) {\n    const alert = await this.alertController.create({\n      header: 'Confirm!',\n      message: 'Are you sure want to delete this info?',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'tertiary',\n          handler: (blah) => {\n            console.log('cancel');\n          }\n        }, {\n          text: 'Okay',\n          handler: () => {\n            this.query.get(score.id)\n              .then((myObject) => {\n                myObject.destroy();    \n                let i = this.scores.indexOf(score);\n                \n                this.scores.splice(i,1);\n\n\n              }, (error) => {\n                // The delete failed.\n                // error is a Parse.Error with an error code and message.\n              });\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  edit(key, list) {\n    console.log(list)\n    list.closeOpened();\n    this.router.navigate(['/edit/' + key]);\n  }\n\n}\n\n\n"],"sourceRoot":""}